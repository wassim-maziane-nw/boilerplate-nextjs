default:
  image: node:14-alpine3.13
  interruptible: true

variables:
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"

stages:
  - install
  - test
  - build

workflow:
  rules:
    - if: "$CI_MERGE_REQUEST_IID"
    - if: "$CI_COMMIT_BRANCH =~ /^(main)$/"

# Ideally this job should not be executed if the nodemodule cache exists
# Waiting for a solution to this issue: https://gitlab.com/gitlab-org/gitlab/-/issues/224650
# A partial workaround is to avoid reuploading cache if not updated by using "allow_failure"
Install Deps:
  stage: install
  script:
    # node_modules exists => cache with key nodemodule+yarn.lock hash exists => node_modules up to date with yarn.lock
    - test -d node_modules/ && { echo "Skipping $CI_JOB_NAME, node_modules already up-to-date."; exit 207; }
    - npx yarn-deduplicate --list --fail
    - cp yarn.lock yarn.lock.orig
    - yarn install --cache-folder .yarn --prefer-offline --frozen-lockfile
    # workaround for this bug: https://github.com/yarnpkg/yarn/issues/8513
    - cmp -s yarn.lock yarn.lock.orig || { echo "yarn.lock file is not up-to-date, please run a yarn install locally or check the changed yarn.lock file in the artifacts"; exit 1; }
  allow_failure:
    exit_codes: 207
  cache:
    - key: yarncache-$CI_JOB_IMAGE
      paths:
        - .yarn
    - key:
        prefix: nodemodules-$CI_JOB_IMAGE
        files:
          - yarn.lock
      paths:
        - node_modules
  artifacts:
    when: on_failure
    paths:
      - yarn.lock

Tests:
  rules:
    - if: "$CI_MERGE_REQUEST_IID"
  stage: test
  before_script:
    - test -d node_modules/ || yarn install --frozen-lockfile
  script:
    - yarn check-unused-exports
    - yarn lint --cache --cache-strategy content --cache-location .cicache/eslint/.cache.json
    - yarn test:snap --cacheDirectory .cicache/jest-snap
    - yarn test:coverage --cacheDirectory .cicache/jest
    - node reportCoverage.js coverage/coverage-summary.json
  coverage: '/Code coverage: \d+\.\d+/'
  cache:
    - key:
        prefix: nodemodules-$CI_JOB_IMAGE
        files:
          - yarn.lock
      paths:
        - node_modules
      policy: pull
    - key:
        prefix: cicache-$CI_JOB_IMAGE
        files:
          - yarn.lock
      paths:
        - .cicache
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

Build:
  variables:
    NEXT_PUBLIC_BUILD_ID: $CI_JOB_ID
    NEXT_PUBLIC_BUILD_DATE: $CI_JOB_STARTED_AT
    NEXT_PUBLIC_BUILD_SHA: $CI_COMMIT_SHA
  stage: build
  before_script:
    - test -d node_modules/ || yarn install --frozen-lockfile
  script:
    - yarn build:export
  artifacts:
    paths:
      - out
    expire_in: 1 week
  cache:
    - key:
        prefix: nodemodules-$CI_JOB_IMAGE
        files:
          - yarn.lock
      paths:
        - node_modules
      policy: pull
    - key: buildcache-$CI_COMMIT_BRANCH-$CI_JOB_IMAGE
      paths:
        - ./.next/cache
